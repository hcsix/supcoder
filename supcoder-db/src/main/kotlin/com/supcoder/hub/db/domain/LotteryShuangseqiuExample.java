package com.supcoder.hub.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LotteryShuangseqiuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public LotteryShuangseqiuExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public LotteryShuangseqiuExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public LotteryShuangseqiuExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LotteryShuangseqiuExample example = new LotteryShuangseqiuExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public LotteryShuangseqiuExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public LotteryShuangseqiuExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIssueNumberIsNull() {
            addCriterion("issue_number is null");
            return (Criteria) this;
        }

        public Criteria andIssueNumberIsNotNull() {
            addCriterion("issue_number is not null");
            return (Criteria) this;
        }

        public Criteria andIssueNumberEqualTo(String value) {
            addCriterion("issue_number =", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberNotEqualTo(String value) {
            addCriterion("issue_number <>", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberGreaterThan(String value) {
            addCriterion("issue_number >", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberGreaterThanOrEqualTo(String value) {
            addCriterion("issue_number >=", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberLessThan(String value) {
            addCriterion("issue_number <", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberLessThanOrEqualTo(String value) {
            addCriterion("issue_number <=", value, "issueNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andIssueNumberLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("issue_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssueNumberLike(String value) {
            addCriterion("issue_number like", value, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andIssueNumberNotLike(String value) {
            addCriterion("issue_number not like", value, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andIssueNumberIn(List<String> values) {
            addCriterion("issue_number in", values, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andIssueNumberNotIn(List<String> values) {
            addCriterion("issue_number not in", values, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andIssueNumberBetween(String value1, String value2) {
            addCriterion("issue_number between", value1, value2, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andIssueNumberNotBetween(String value1, String value2) {
            addCriterion("issue_number not between", value1, value2, "issueNumber");
            return (Criteria) this;
        }

        public Criteria andRedBallsIsNull() {
            addCriterion("red_balls is null");
            return (Criteria) this;
        }

        public Criteria andRedBallsIsNotNull() {
            addCriterion("red_balls is not null");
            return (Criteria) this;
        }

        public Criteria andRedBallsEqualTo(String value) {
            addCriterion("red_balls =", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsNotEqualTo(String value) {
            addCriterion("red_balls <>", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsGreaterThan(String value) {
            addCriterion("red_balls >", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsGreaterThanOrEqualTo(String value) {
            addCriterion("red_balls >=", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsLessThan(String value) {
            addCriterion("red_balls <", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsLessThanOrEqualTo(String value) {
            addCriterion("red_balls <=", value, "redBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andRedBallsLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("red_balls <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRedBallsLike(String value) {
            addCriterion("red_balls like", value, "redBalls");
            return (Criteria) this;
        }

        public Criteria andRedBallsNotLike(String value) {
            addCriterion("red_balls not like", value, "redBalls");
            return (Criteria) this;
        }

        public Criteria andRedBallsIn(List<String> values) {
            addCriterion("red_balls in", values, "redBalls");
            return (Criteria) this;
        }

        public Criteria andRedBallsNotIn(List<String> values) {
            addCriterion("red_balls not in", values, "redBalls");
            return (Criteria) this;
        }

        public Criteria andRedBallsBetween(String value1, String value2) {
            addCriterion("red_balls between", value1, value2, "redBalls");
            return (Criteria) this;
        }

        public Criteria andRedBallsNotBetween(String value1, String value2) {
            addCriterion("red_balls not between", value1, value2, "redBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsIsNull() {
            addCriterion("blue_balls is null");
            return (Criteria) this;
        }

        public Criteria andBlueBallsIsNotNull() {
            addCriterion("blue_balls is not null");
            return (Criteria) this;
        }

        public Criteria andBlueBallsEqualTo(String value) {
            addCriterion("blue_balls =", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsNotEqualTo(String value) {
            addCriterion("blue_balls <>", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsGreaterThan(String value) {
            addCriterion("blue_balls >", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsGreaterThanOrEqualTo(String value) {
            addCriterion("blue_balls >=", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsLessThan(String value) {
            addCriterion("blue_balls <", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsLessThanOrEqualTo(String value) {
            addCriterion("blue_balls <=", value, "blueBalls");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andBlueBallsLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("blue_balls <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlueBallsLike(String value) {
            addCriterion("blue_balls like", value, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsNotLike(String value) {
            addCriterion("blue_balls not like", value, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsIn(List<String> values) {
            addCriterion("blue_balls in", values, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsNotIn(List<String> values) {
            addCriterion("blue_balls not in", values, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsBetween(String value1, String value2) {
            addCriterion("blue_balls between", value1, value2, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andBlueBallsNotBetween(String value1, String value2) {
            addCriterion("blue_balls not between", value1, value2, "blueBalls");
            return (Criteria) this;
        }

        public Criteria andDrawDateIsNull() {
            addCriterion("draw_date is null");
            return (Criteria) this;
        }

        public Criteria andDrawDateIsNotNull() {
            addCriterion("draw_date is not null");
            return (Criteria) this;
        }

        public Criteria andDrawDateEqualTo(LocalDateTime value) {
            addCriterion("draw_date =", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateNotEqualTo(LocalDateTime value) {
            addCriterion("draw_date <>", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateGreaterThan(LocalDateTime value) {
            addCriterion("draw_date >", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("draw_date >=", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateLessThan(LocalDateTime value) {
            addCriterion("draw_date <", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("draw_date <=", value, "drawDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDrawDateLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("draw_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrawDateIn(List<LocalDateTime> values) {
            addCriterion("draw_date in", values, "drawDate");
            return (Criteria) this;
        }

        public Criteria andDrawDateNotIn(List<LocalDateTime> values) {
            addCriterion("draw_date not in", values, "drawDate");
            return (Criteria) this;
        }

        public Criteria andDrawDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("draw_date between", value1, value2, "drawDate");
            return (Criteria) this;
        }

        public Criteria andDrawDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("draw_date not between", value1, value2, "drawDate");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountIsNull() {
            addCriterion("jackpot_amount is null");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountIsNotNull() {
            addCriterion("jackpot_amount is not null");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountEqualTo(BigDecimal value) {
            addCriterion("jackpot_amount =", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountNotEqualTo(BigDecimal value) {
            addCriterion("jackpot_amount <>", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountGreaterThan(BigDecimal value) {
            addCriterion("jackpot_amount >", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("jackpot_amount >=", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountLessThan(BigDecimal value) {
            addCriterion("jackpot_amount <", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("jackpot_amount <=", value, "jackpotAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andJackpotAmountLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("jackpot_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJackpotAmountIn(List<BigDecimal> values) {
            addCriterion("jackpot_amount in", values, "jackpotAmount");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountNotIn(List<BigDecimal> values) {
            addCriterion("jackpot_amount not in", values, "jackpotAmount");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("jackpot_amount between", value1, value2, "jackpotAmount");
            return (Criteria) this;
        }

        public Criteria andJackpotAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("jackpot_amount not between", value1, value2, "jackpotAmount");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeIsNull() {
            addCriterion("first_prize is null");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeIsNotNull() {
            addCriterion("first_prize is not null");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeEqualTo(Integer value) {
            addCriterion("first_prize =", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeNotEqualTo(Integer value) {
            addCriterion("first_prize <>", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeGreaterThan(Integer value) {
            addCriterion("first_prize >", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("first_prize >=", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeLessThan(Integer value) {
            addCriterion("first_prize <", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("first_prize <=", value, "firstPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFirstPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("first_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstPrizeIn(List<Integer> values) {
            addCriterion("first_prize in", values, "firstPrize");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeNotIn(List<Integer> values) {
            addCriterion("first_prize not in", values, "firstPrize");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeBetween(Integer value1, Integer value2) {
            addCriterion("first_prize between", value1, value2, "firstPrize");
            return (Criteria) this;
        }

        public Criteria andFirstPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("first_prize not between", value1, value2, "firstPrize");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeIsNull() {
            addCriterion("second_prize is null");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeIsNotNull() {
            addCriterion("second_prize is not null");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeEqualTo(Integer value) {
            addCriterion("second_prize =", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeNotEqualTo(Integer value) {
            addCriterion("second_prize <>", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeGreaterThan(Integer value) {
            addCriterion("second_prize >", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("second_prize >=", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeLessThan(Integer value) {
            addCriterion("second_prize <", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("second_prize <=", value, "secondPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSecondPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("second_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSecondPrizeIn(List<Integer> values) {
            addCriterion("second_prize in", values, "secondPrize");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeNotIn(List<Integer> values) {
            addCriterion("second_prize not in", values, "secondPrize");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeBetween(Integer value1, Integer value2) {
            addCriterion("second_prize between", value1, value2, "secondPrize");
            return (Criteria) this;
        }

        public Criteria andSecondPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("second_prize not between", value1, value2, "secondPrize");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeIsNull() {
            addCriterion("third_prize is null");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeIsNotNull() {
            addCriterion("third_prize is not null");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeEqualTo(Integer value) {
            addCriterion("third_prize =", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeNotEqualTo(Integer value) {
            addCriterion("third_prize <>", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeGreaterThan(Integer value) {
            addCriterion("third_prize >", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("third_prize >=", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeLessThan(Integer value) {
            addCriterion("third_prize <", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("third_prize <=", value, "thirdPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andThirdPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("third_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andThirdPrizeIn(List<Integer> values) {
            addCriterion("third_prize in", values, "thirdPrize");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeNotIn(List<Integer> values) {
            addCriterion("third_prize not in", values, "thirdPrize");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeBetween(Integer value1, Integer value2) {
            addCriterion("third_prize between", value1, value2, "thirdPrize");
            return (Criteria) this;
        }

        public Criteria andThirdPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("third_prize not between", value1, value2, "thirdPrize");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeIsNull() {
            addCriterion("fourth_prize is null");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeIsNotNull() {
            addCriterion("fourth_prize is not null");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeEqualTo(Integer value) {
            addCriterion("fourth_prize =", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeNotEqualTo(Integer value) {
            addCriterion("fourth_prize <>", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeGreaterThan(Integer value) {
            addCriterion("fourth_prize >", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("fourth_prize >=", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeLessThan(Integer value) {
            addCriterion("fourth_prize <", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("fourth_prize <=", value, "fourthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFourthPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fourth_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFourthPrizeIn(List<Integer> values) {
            addCriterion("fourth_prize in", values, "fourthPrize");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeNotIn(List<Integer> values) {
            addCriterion("fourth_prize not in", values, "fourthPrize");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeBetween(Integer value1, Integer value2) {
            addCriterion("fourth_prize between", value1, value2, "fourthPrize");
            return (Criteria) this;
        }

        public Criteria andFourthPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("fourth_prize not between", value1, value2, "fourthPrize");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeIsNull() {
            addCriterion("fifth_prize is null");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeIsNotNull() {
            addCriterion("fifth_prize is not null");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeEqualTo(Integer value) {
            addCriterion("fifth_prize =", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeNotEqualTo(Integer value) {
            addCriterion("fifth_prize <>", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeGreaterThan(Integer value) {
            addCriterion("fifth_prize >", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("fifth_prize >=", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeLessThan(Integer value) {
            addCriterion("fifth_prize <", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("fifth_prize <=", value, "fifthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andFifthPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("fifth_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFifthPrizeIn(List<Integer> values) {
            addCriterion("fifth_prize in", values, "fifthPrize");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeNotIn(List<Integer> values) {
            addCriterion("fifth_prize not in", values, "fifthPrize");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeBetween(Integer value1, Integer value2) {
            addCriterion("fifth_prize between", value1, value2, "fifthPrize");
            return (Criteria) this;
        }

        public Criteria andFifthPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("fifth_prize not between", value1, value2, "fifthPrize");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeIsNull() {
            addCriterion("sixth_prize is null");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeIsNotNull() {
            addCriterion("sixth_prize is not null");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeEqualTo(Integer value) {
            addCriterion("sixth_prize =", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeNotEqualTo(Integer value) {
            addCriterion("sixth_prize <>", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeGreaterThan(Integer value) {
            addCriterion("sixth_prize >", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("sixth_prize >=", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeLessThan(Integer value) {
            addCriterion("sixth_prize <", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("sixth_prize <=", value, "sixthPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSixthPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("sixth_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSixthPrizeIn(List<Integer> values) {
            addCriterion("sixth_prize in", values, "sixthPrize");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeNotIn(List<Integer> values) {
            addCriterion("sixth_prize not in", values, "sixthPrize");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeBetween(Integer value1, Integer value2) {
            addCriterion("sixth_prize between", value1, value2, "sixthPrize");
            return (Criteria) this;
        }

        public Criteria andSixthPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("sixth_prize not between", value1, value2, "sixthPrize");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeIsNull() {
            addCriterion("seventh_prize is null");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeIsNotNull() {
            addCriterion("seventh_prize is not null");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeEqualTo(Integer value) {
            addCriterion("seventh_prize =", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeNotEqualTo(Integer value) {
            addCriterion("seventh_prize <>", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeGreaterThan(Integer value) {
            addCriterion("seventh_prize >", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("seventh_prize >=", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeLessThan(Integer value) {
            addCriterion("seventh_prize <", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeLessThanOrEqualTo(Integer value) {
            addCriterion("seventh_prize <=", value, "seventhPrize");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andSeventhPrizeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("seventh_prize <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeIn(List<Integer> values) {
            addCriterion("seventh_prize in", values, "seventhPrize");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeNotIn(List<Integer> values) {
            addCriterion("seventh_prize not in", values, "seventhPrize");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeBetween(Integer value1, Integer value2) {
            addCriterion("seventh_prize between", value1, value2, "seventhPrize");
            return (Criteria) this;
        }

        public Criteria andSeventhPrizeNotBetween(Integer value1, Integer value2) {
            addCriterion("seventh_prize not between", value1, value2, "seventhPrize");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LotteryShuangseqiu.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        private LotteryShuangseqiuExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        protected Criteria(LotteryShuangseqiuExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public LotteryShuangseqiuExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LotteryShuangseqiu.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LotteryShuangseqiu.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table lottery_shuangseqiu
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lottery_shuangseqiu
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table lottery_shuangseqiu
         *
         * @mbg.generated
         */
        void example(com.supcoder.hub.db.domain.LotteryShuangseqiuExample example);
    }
}